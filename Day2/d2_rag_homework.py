# -*- coding: utf-8 -*-
"""D2-RAG_homework

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dJU02qD0X9-vaIwA_BiMNFcamrirM4r9

# Day2 Homework
"""

import os

os.environ["OPENAI_API_KEY"] = "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"

llama_promt = """
<|begin_of_text|><|start_header_id|>system<|end_header_id|>
You are a helpful AI assistant<|eot_id|>
"""

!pip install -q --upgrade langchain_community

from langchain_community.chat_models import ChatOllama

llm = ChatOllama(model="llama3", temperature=0)

from langchain_community.document_loaders import WebBaseLoader

urls = [
    "https://lilianweng.github.io/posts/2023-06-23-agent/",
    "https://lilianweng.github.io/posts/2023-03-15-prompt-engineering/",
    "https://lilianweng.github.io/posts/2023-10-25-adv-attack-llm/",
]

loader = WebBaseLoader(urls)
data = loader.load()

print(data)

!pip install -qU langchain-text-splitters

from langchain_text_splitters import RecursiveCharacterTextSplitter

text_splitter = RecursiveCharacterTextSplitter(
    # Set a really small chunk size, just to show.
    chunk_size=100,
    chunk_overlap=20,
    length_function=len,
    is_separator_regex=False,
)
texts = text_splitter.split_documents(data)
print(texts[0])
print(texts[1])

!pip install -qU langchain-openai

!pip install langchain-chroma

from langchain_openai import OpenAIEmbeddings
from langchain_chroma import Chroma

vectorstore = Chroma.from_documents(documents=texts, embedding=OpenAIEmbeddings(), collection_name="test")
retriever = vectorstore.as_retriever()

user_query = "agent memory"
docs = vectorstore.similarity_search(user_query)
print(docs)

from langchain_core.prompts import PromptTemplate
from langchain_core.output_parsers import JsonOutputParser

parser = JsonOutputParser()

prompt = PromptTemplate(
    template=llama_promt,
    input_variables=["query"],
    partial_variables={"format_instructions": parser.get_format_instructions()},
)

chain = prompt | llm | parser

chain.invoke({"query": user_query})